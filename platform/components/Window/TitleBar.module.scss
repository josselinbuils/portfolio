@import '../../constants';

.button {
  float: left;
  width: 2.2rem;
  height: 100%;
  padding: 0;
  border: none;
  outline: none;
  background: none;

  &:hover,
  &.active {
    color: #f0f0f0 !important;
  }

  &.close:hover,
  &.close.active {
    background: #e20000;
  }

  &.maximize:hover,
  &.maximize.active,
  &.minimize:hover,
  &.minimize.active {
    background: $primaryColor;
  }

  i {
    font-size: 1.4rem;
    line-height: 2.2rem;
  }
}

.buttons {
  position: absolute;
  top: 0;
  left: 0;
  height: 2.2rem;
}

.title {
  font-family:
    Lucida Sans Unicode,
    Lucida Grande,
    sans-serif;
  font-size: 1.4rem;
  font-weight: inherit;
  line-height: 2.2rem;
  width: 100%;
  height: 2.2rem;
  margin: 0;
  text-align: center;
}

.titlebar {
  font-family: 'Lucida Sans Unicode', 'Lucida Grande', sans-serif;
  font-size: 1.4rem;
  line-height: 2.2rem;
  height: 2.2rem;
  text-align: center;

  &,
  * {
    cursor: default;
    user-select: none;
  }

  &:not(.maximized) {
    border-top-left-radius: 0.6rem;
    border-top-right-radius: 0.6rem;

    .close {
      border-top-left-radius: 0.6rem;
    }
  }
}

// Modifiers

.frozen {
  pointer-events: none;
}

:global(.keyboardFocused) .button {
  &:focus {
    color: #f0f0f0 !important;
  }

  &.close:focus {
    background: #e20000;
  }

  &.maximize:focus,
  &.minimize:focus {
    background: $primaryColor;
  }
}

@media only screen and (max-width: $mobileBreakpoint) {
  .titlebar {
    display: none;
  }
}
